{"version":3,"sources":["components/PersonalCard/PersonalCard.module.scss","pages/RobotView/RobotView.module.scss","components/NavigationBar/NavigationBar.module.scss","pages/RobotList/RobotList.module.scss","components/GeneralCard/GeneralCard.module.scss","pages/Home/Home.module.scss","components/CardList/CardList.module.scss","pages/PageNotFound/PageNotFound.module.scss","App.module.scss","pages/PageNotFound/404-robot.png","components/NavigationBar/NavigationBar.jsx","pages/Home/Home.jsx","components/GeneralCard/GeneralCard.jsx","components/CardList/CardList.jsx","pages/RobotList/RobotList.jsx","components/PersonalCard/PersonalCard.jsx","pages/RobotView/RobotView.jsx","pages/PageNotFound/PageNotFound.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","NavigationBar","className","styles","wrapper","navContainer","navList","navItem","navLink","to","activeStyle","fontWeight","textDecoration","Home","title","GeneralCard","robot","link","id","marginReset","alt","src","roboName","name","CardList","robots","grid","map","key","RobotList","useState","setRobots","isPending","setIsPending","hasError","setHasError","useEffect","isSubscribed","fetch","then","response","json","users","catch","err","centerTextOnPage","length","PersonalCard","robotImg","table","cellName","cellValue","username","address","geo","lat","lng","company","catchPhrase","RobotView","props","setRobot","value","setValue","match","params","status","history","push","user","handleChange","e","target","handleSubmit","preventDefault","console","log","toUpperCase","container","form","onSubmit","formLabel","formTextarea","onChange","placeholder","submitButton","type","PageNotFound","sadRobot","App","main","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.61548ee0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PersonalCard_wrapper__1nvEh\",\"table\":\"PersonalCard_table__3t62i\",\"cellName\":\"PersonalCard_cellName__2U1V9\",\"cellValue\":\"PersonalCard_cellValue__2Ycex\",\"robotImg\":\"PersonalCard_robotImg__3BDPI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RobotView_wrapper__2z5Hy\",\"title\":\"RobotView_title__1c_Fu\",\"centerTextOnPage\":\"RobotView_centerTextOnPage__eRI4m\",\"container\":\"RobotView_container__1lbqF\",\"form\":\"RobotView_form__EPqdX\",\"formLabel\":\"RobotView_formLabel__1TQ5A\",\"formTextarea\":\"RobotView_formTextarea__6mxG2\",\"submitButton\":\"RobotView_submitButton__1K6lX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NavigationBar_wrapper___R_i-\",\"navContainer\":\"NavigationBar_navContainer__1dQrE\",\"navList\":\"NavigationBar_navList__2FItB\",\"navItem\":\"NavigationBar_navItem__3yaPg\",\"navLink\":\"NavigationBar_navLink__3SYUE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RobotList_wrapper__1IZvk\",\"title\":\"RobotList_title__1lOEI\",\"centerTextOnPage\":\"RobotList_centerTextOnPage__3O9ue\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"GeneralCard_link__2T7E1\",\"roboName\":\"GeneralCard_roboName__31Vsw\",\"marginReset\":\"GeneralCard_marginReset__1iD6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Home_wrapper__2Nu0o\",\"title\":\"Home_title__2hRVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardList_wrapper__wFFUE\",\"grid\":\"CardList_grid__2DWPh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PageNotFound_wrapper__9e8fE\",\"robotImg\":\"PageNotFound_robotImg__j3rJm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2_IyI\",\"main\":\"App_main__fxAOw\"};","module.exports = __webpack_public_path__ + \"static/media/404-robot.b6ae6f03.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './NavigationBar.module.scss';\r\n\r\nfunction NavigationBar() {\r\n  return (\r\n    <header className={styles.wrapper}>\r\n      <nav className={styles.navContainer}>\r\n        <ul className={styles.navList}>\r\n          <li className={styles.navItem}>\r\n            <NavLink\r\n              className={styles.navLink}\r\n              to=\"/home\"\r\n              activeStyle={{\r\n                fontWeight: 'bold',\r\n                textDecoration: 'underline',\r\n              }}\r\n            >\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li className={styles.navItem}>\r\n            <NavLink\r\n              className={styles.navLink}\r\n              to=\"/robots\"\r\n              activeStyle={{\r\n                fontWeight: 'bold',\r\n                textDecoration: 'underline',\r\n              }}\r\n            >\r\n              Robots\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default NavigationBar;\r\n","import React from 'react';\r\nimport styles from './Home.module.scss';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <h1 className={styles.title}>Welcome to the Robot Wars!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './GeneralCard.module.scss';\r\n\r\nfunction GeneralCard({ robot }) {\r\n  return (\r\n    <Link className={styles.link} to={`/robots/${robot.id}`}>\r\n      <h4 className={styles.marginReset}>#{robot.id}</h4>\r\n      <img alt=\"robot\" src={`https://robohash.org/${robot.id}?set=set2&size=180x180`} />\r\n      <h4 className={styles.roboName}>{robot.name}</h4>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default GeneralCard;\r\n","import React from 'react';\r\nimport { GeneralCard } from '../GeneralCard';\r\nimport styles from './CardList.module.scss';\r\n\r\nfunction CardList({ robots }) {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.grid}>\r\n        {robots.map(robot => (\r\n          <GeneralCard key={robot.id} robot={robot}></GeneralCard>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CardList } from '../../components/CardList';\r\nimport styles from './RobotList.module.scss';\r\n\r\nfunction RobotList() {\r\n  const [robots, setRobots] = useState([]);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Cancelling a Promise with React.useEffect\r\n    // https://juliangaramendy.dev/use-promise-subscription/\r\n    let isSubscribed = true;\r\n    setIsPending(true);\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => {\r\n        if (isSubscribed) {\r\n          setRobots(users);\r\n          setIsPending(false);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (isSubscribed) {\r\n          setHasError(true);\r\n          setIsPending(false);\r\n        }\r\n      });\r\n    return () => (isSubscribed = false);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {isPending && <h2 className={styles.centerTextOnPage}>Loading...</h2>}\r\n      {hasError && <h2 className={styles.centerTextOnPage}>Oops! Something went wrong.</h2>}\r\n      {!isPending && !hasError && robots.length > 0 && (\r\n        <>\r\n          <h1 className={styles.title}>Robot Warriors List</h1>\r\n          <CardList robots={robots}></CardList>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RobotList;\r\n","import React from 'react';\r\nimport styles from './PersonalCard.module.scss';\r\n\r\nfunction PersonalCard({ robot }) {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <img\r\n        alt=\"robot\"\r\n        className={styles.robotImg}\r\n        src={`https://robohash.org/${robot.id}?set=set2&size=180x180`}\r\n      />\r\n      <table className={styles.table}>\r\n        <tbody>\r\n          <tr>\r\n            <th className={styles.cellName}>Id:</th>\r\n            <th className={styles.cellValue}>{robot.id}</th>\r\n          </tr>\r\n          <tr>\r\n            <th className={styles.cellName}>Name:</th>\r\n            <th className={styles.cellValue}>{robot.name}</th>\r\n          </tr>\r\n          <tr>\r\n            <th className={styles.cellName}>Username:</th>\r\n            <th className={styles.cellValue}>{robot.username}</th>\r\n          </tr>\r\n          <tr>\r\n            <th className={styles.cellName}>Coordinates:</th>\r\n            <th className={styles.cellValue}>\r\n              ({robot.address.geo.lat}, {robot.address.geo.lng})\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th className={styles.cellName}>Catch phrase:</th>\r\n            <th className={styles.cellValue}>{robot.company.catchPhrase}</th>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonalCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { PersonalCard } from '../../components/PersonalCard';\r\nimport styles from './RobotView.module.scss';\r\n\r\nfunction RobotView(props) {\r\n  const [robot, setRobot] = useState({});\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [value, setValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Cancelling a Promise with React.useEffect\r\n    // https://juliangaramendy.dev/use-promise-subscription/\r\n    let isSubscribed = true;\r\n    setIsPending(true);\r\n    fetch(`https://jsonplaceholder.typicode.com/users/${props.match.params.id}`)\r\n      .then(response => {\r\n        if (response.status === 404) {\r\n          props.history.push('/404');\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(user => {\r\n        if (isSubscribed) {\r\n          setRobot(user);\r\n          setIsPending(false);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (isSubscribed) {\r\n          setHasError(true);\r\n          setIsPending(false);\r\n        }\r\n      });\r\n    return () => (isSubscribed = false);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(value ? 'Instruction: ' + value.toUpperCase() : 'IDLE MDOE');\r\n    setValue('');\r\n  };\r\n\r\n  const renderForm = () => (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.formLabel}>\r\n        Send your instructions to the robot:\r\n        <textarea\r\n          className={styles.formTextarea}\r\n          value={value}\r\n          onChange={handleChange}\r\n          placeholder=\"See instructions in the console...\"\r\n        />\r\n      </label>\r\n      <input className={styles.submitButton} type=\"submit\" value=\"INSTRUCT\" />\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {isPending && <h2 className={styles.centerTextOnPage}>Loading...</h2>}\r\n      {hasError && <h2 className={styles.centerTextOnPage}>Oops! Something went wrong.</h2>}\r\n      {!isPending && !hasError && robot.id && (\r\n        <>\r\n          <h1 className={styles.title}>Robot Personal Card</h1>\r\n          <div className={styles.container}>\r\n            <PersonalCard robot={robot}></PersonalCard>\r\n            {renderForm()}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RobotView;\r\n","import React from 'react';\r\nimport styles from './PageNotFound.module.scss';\r\nimport sadRobot from './404-robot.png';\r\n\r\nfunction PageNotFound() {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <img className={styles.robotImg} src={sadRobot} alt=\"Sad robot - page not found\" />\r\n      <h1>Page/Robot not found!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { NavigationBar } from './components/NavigationBar';\nimport { Home } from './pages/Home';\nimport { RobotList } from './pages/RobotList';\nimport { RobotView } from './pages/RobotView';\nimport { PageNotFound } from './pages/PageNotFound';\nimport styles from './App.module.scss';\n\nfunction App() {\n  return (\n    <div className={styles.wrapper}>\n      <NavigationBar />\n      <main className={styles.main}>\n        <Switch>\n          <Route exact path=\"/\" component={() => <Redirect to=\"/home\" />} />\n          <Route exact path=\"/home\" component={props => <Home {...props} />} />\n          <Route exact path=\"/robots\" component={props => <RobotList {...props} />} />\n          <Route exact path=\"/robots/:id\" component={props => <RobotView {...props} />} />\n          <Route exact path=\"/404\" component={() => <PageNotFound />} />\n          <Route exact component={() => <Redirect to=\"/404\" />} />\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}